{"version":3,"sources":["components/bottomContainer.js","utils/Profile.js","components/App.js","index.js"],"names":["BottomContainer","_this$props$currentBi","this","props","currentBird","list","fact","description","array","el","loopLength","length","i","react_default","a","createElement","key","push","iteration","map","className","Component","bird","name","image","App","state","id","switchBird","e","keyCode","_this","newBird","setState","document","addEventListener","removeEventListener","src","alt","bottomContainer_BottomContainer","ReactDOM","render","App_App","getElementById"],"mappings":"iOAEqBA,0LAuBjB,IArBO,IAAAC,EAE4BC,KAAKC,MAAMC,YAAvCC,EAFAJ,EAEAI,KAAMC,EAFNL,EAEMK,KAAMC,EAFZN,EAEYM,YAabC,EAAQ,GACVC,EAAK,GAIHC,EAAaL,EAAK,GAAGM,OAClBC,EAAE,EAAGA,EAAIF,EAAYE,IAG5BH,EAAKI,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,GAAGC,EAAAC,EAAAC,cAAA,YAAOV,EAAK,GAAGO,IAA3B,KAAwCP,EAAK,GAAGO,IACrDJ,EAAMS,KAAKR,GAOb,IAAMS,EAAYV,EAAMW,IAAK,SAACV,GAAD,OAASA,IAEtC,OAEEI,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBAEbP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QACVd,GAGHO,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QACXF,GAGHL,EAAAC,EAAAC,cAAA,SACGR,WAjDkCc,cCUhCC,EAAO,CAElB,CAAEC,KAAM,gBACNjB,KAAM,yIACNC,YAAa,8VACbiB,MAAO,uBACPnB,KAAM,CACJ,CAAC,kBAAkB,eAAe,UAAU,UAC5C,CAAC,oBAAoB,iBAAiB,kBAAkB,qCAG1D,CAAEkB,KAAM,sBACNjB,KAAM,0KACNC,YAAa,oTACbiB,MAAO,0BACPnB,KAAM,CACJ,CAAC,kBAAkB,eAAe,UAAU,UAC5C,CAAC,kBAAkB,iBAAiB,iBAAiB,mCAGvD,CAAEkB,KAAM,mBACNjB,KAAM,gPACNC,YAAa,sUACbiB,MAAO,yBACPnB,KAAM,CACJ,CAAC,kBAAkB,eAAe,UAAU,UAC5C,CAAC,gBAAgB,qBAAqB,6BAA6B,mCCjCxDoB,6MAEnBC,MAAQ,CAAEC,GAAI,KAsBdC,WAAa,SAACC,GACZ,OAAQA,EAAEC,SAER,KAAK,GACH,GAAIC,EAAKL,MAAMC,GAAK,EAAG,CACrB,IAAIK,EAAUD,EAAKL,MAAMC,GAAK,EAC9BI,EAAKE,SAAS,CAAEN,GAAIK,SAEpBD,EAAKE,SAAS,CAAEN,GAAIL,EAAKX,OAAS,IAEpC,MAEF,KAAK,GACH,GAAIoB,EAAKL,MAAMC,GAAKL,EAAKX,OAAS,EAAG,CACnC,IAAIqB,EAAUD,EAAKL,MAAMC,GAAK,EAC9BI,EAAKE,SAAS,CAAEN,GAAIK,SAEpBD,EAAKE,SAAS,CAAEN,GAAI,yFA/B1BO,SAASC,iBAAiB,UAAWjC,KAAK0B,YAAY,kDAGxDM,SAASE,oBAAoB,UAAWlC,KAAK0B,YAAY,oCAuCvD,IAAIxB,EAAckB,EAAKpB,KAAKwB,MAAMC,IAC3BJ,EAAgBnB,EAAhBmB,KAAMC,EAAUpB,EAAVoB,MAEb,OACEX,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,UAAUG,GAExBV,EAAAC,EAAAC,cAAA,OAAKsB,IAAKb,EAAOJ,UAAU,aAAakB,IAAKf,IAE3CV,EAAAC,EAAAC,cAACwB,EAAD,CAAiBnC,YAAaA,YA7DPiB,aCDjCmB,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASR,SAASS,eAAe","file":"static/js/main.afcf7e07.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class BottomContainer extends Component {\r\n\r\n  render() {\r\n\r\n    const{ list, fact, description } = this.props.currentBird;\r\n\r\n    /**\r\n    * All the data about the card come from the animal's main object.\r\n    * Inside it, as a key of the object there is there is \"list\", an array\r\n    *   containing 2 sub-arrays used for the following <ul list>, one for\r\n    *   the titles and the last for the descriptions.\r\n    * To build every line of the <list> I need to load data from 2 arrays, so\r\n    *   the solution I've found is to create the following \"array\" filled\r\n    *   with every line of the <ul list>.\r\n    * Each line is named el and pushed in the array.\r\n    **/\r\n\r\n    const array = []; /* the container array */\r\n    let el = '';\r\n\r\n    /* this defines the length of the iteration, list[0] because contains the titles, and the number of titles define the length of the list*/\r\n\r\n    const loopLength = list[0].length;\r\n    for (let i=0; i < loopLength; i++) {\r\n      /* list[0] array of titles */\r\n      /* list[1] array of descriptions */\r\n      el = <li key={i}><span>{list[0][i]}</span>: {list[1][i]}</li>;\r\n      array.push(el);\r\n    }\r\n\r\n    /**\r\n    * Here finally I can use the map method on my container array, containing\r\n    *   data from 2 different arrays, to build the list.\r\n    **/\r\n    const iteration = array.map( (el) => (el) );\r\n\r\n    return(\r\n\r\n      <div className=\"bottom-container\">\r\n\r\n        <p className=\"fact\">\r\n          {fact}\r\n        </p>\r\n\r\n        <ul className=\"list\">\r\n          {iteration}\r\n        </ul>\r\n\r\n        <p>\r\n          {description}\r\n        </p>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","/**\r\n* This is the collection of the cards.\r\n* Structure to add a new one (or to understand how I call them in the App):\r\n* bird = [{name:'...',\r\n*         fact:'...',\r\n*         description:'...',\r\n*         image:'...',\r\n*         list:[ [...],\r\n*                [...] ]\r\n*         }];\r\n**/\r\n\r\nexport const bird = [\r\n\r\n  { name: 'House Sparrow',\r\n    fact: 'The house sparrow is a very social bird. It is gregarious at all seasons when feeding, often forming flocks with other types of birds.',\r\n    description: 'The house sparrow is a bird of the sparrow family Passeridae, found in most parts of the world. The house sparrow can be confused with a number of other seed-eating birds, especially its relatives in the genus Passer. The house sparrow originated in the Middle East and spread, along with agriculture, to most of Eurasia and parts of North Africa.',\r\n    image: './images/sparrow.jpg',\r\n    list: [\r\n      ['Scientific Name','Average Size','Feeding','Weight'],\r\n      ['Passer domesticus','16 cm (6.3 in)','Seeds about 90%',' 24 to 39.5 g (0.85 to 1.39 oz)']\r\n    ]},\r\n\r\n    { name: 'European Greenfinch',\r\n      fact: 'It is a bright, colourful and stocky garden bird with a highly distinctive forked tail. It is mainly resident, but some northernmost populations migrate further south.',\r\n      description: 'The natural range of the Greenfinch is Europe, North Africa, the Middle East and western Asia. It is similar in size and shape to a house sparrow, but is mainly green, with yellow in the wings and tail. The female and young birds are duller and have brown tones on the back. The bill is thick and conical.',\r\n      image: './images/greenfinch.jpg',\r\n      list: [\r\n        ['Scientific Name','Average Size','Feeding','Weight'],\r\n        ['Chloris chloris','15 cm (5.9 in)','Seeds, berries',' 25 to 32 g (0.88 to 1.13 oz)']\r\n      ]},\r\n\r\n      { name: 'Common Blackbird',\r\n        fact: 'The male common blackbird defends its breeding territory, chasing away other males or utilising a \"bow and run\" threat display. This consists of a short run, the head first being raised and then bowed with the tail dipped simultaneously.',\r\n        description: 'The male is all black except for a yellow eye-ring and bill and has a rich, melodious song; the adult female and juvenile have mainly dark brown plumage. This species breeds in woods and gardens, building a neat, mud-lined, cup-shaped nest. It is omnivorous, eating a wide range of insects, earthworms, berries, and fruits.',\r\n        image: './images/blackbird.jpg',\r\n        list: [\r\n          ['Scientific Name','Average Size','Feeding','Weight'],\r\n          ['Turdus merula',' 23.5 cm (9.25 in)','Omnivorous, insects, seeds',' 80 to 125 g (2.8 to 4.4 oz)']\r\n        ]}\r\n\r\n];\r\n","import React, { Component } from 'react';\r\nimport '../style/App.css';\r\nimport BottomContainer from './bottomContainer.js'\r\nimport { bird } from '../utils/Profile';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = { id: 0 }\r\n\r\n  /**\r\n  * working solution to add an event listener on keypress\r\n  *    by using componentDidMount()\r\n  * https://stackoverflow.com/a/46123962\r\n  **/\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.switchBird, false);\r\n  }\r\n  componentWillUnmount() {\r\n  document.removeEventListener(\"keydown\", this.switchBird, false);\r\n  }\r\n\r\n  /**\r\n  * The function switchBird loops all the available cards.\r\n  * When the app starts the card id is set to 0.\r\n  * Pressing the right or left arrow keys will cause the change of the card\r\n  *   according to the order of the cards inside the file Profile.js\r\n  * I use (bird.length - 1) to control the max index of the card,\r\n  *   (-1) to fix the array length not matching the index.\r\n  **/\r\n  switchBird = (e) => {\r\n    switch (e.keyCode) {\r\n\r\n      case 37: /* left arrow */\r\n        if (this.state.id > 0) { /* if > 0 decrease current index */\r\n          let newBird = this.state.id - 1;\r\n          this.setState({ id: newBird });\r\n        } else { /* else jump to the last available card */\r\n          this.setState({ id: bird.length - 1 }); /* its index is maxLength - 1 */\r\n        }\r\n        break;\r\n\r\n      case 39: /* right arrow */\r\n        if (this.state.id < bird.length - 1) { /* if < lastItem increase current index */\r\n          let newBird = this.state.id + 1;\r\n          this.setState({ id: newBird });\r\n        } else { /* if lastItem jump to first */\r\n          this.setState({ id: 0 });\r\n        }\r\n        break;\r\n\r\n      default: /* empty default case just to remove the warning in console */\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let currentBird = bird[this.state.id];\r\n    const{ name, image } = currentBird;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"header\">{name}</h3>\r\n\r\n        <img src={image} className=\"main-image\" alt={name} />\r\n\r\n          <BottomContainer currentBird={currentBird}/>\r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n/**\r\n*  Image Credits:\r\n*   - greenfinch: http://www.seenature.org.uk/see-nature-news/the-greenfinch/\r\n*   - common blackbird: http://www.nidoingiardino.com/merlo/\r\n*   - sparrow: seen on several websites\r\n*\r\n*  Descriptions Credits:\r\n*  Mostly from Wikipedia but also from sources of images\r\n*\r\n*  Help me to give credits, if you know more contact me.\r\n**/\r\n"],"sourceRoot":""}